<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><title>io7m-jparasol 0.11.3 Documentation: 2.1. Prerequisites</title><link rel="stylesheet" type="text/css" href="jstructural-2.0.0-layout.css"/><link rel="stylesheet" type="text/css" href="jstructural-2.0.0-colour.css"/><link rel="stylesheet" type="text/css" href="documentation.css"/></head><body><div class="st200_body"><div class="brand">
  <div class="brand_left">
    <a href="http://io7m.com/">io7m</a>
  </div>
  <div class="brand_right">
    <a href="http://io7m.github.io/jparasol/">io7m-jparasol</a> 0.11.3
  </div>
</div><div class="st200_navbar st200_navbar_top"><table class="st200_navbar_table" summary="Navigation bar"><tr><td class="st200_navbar_prev_title_cell">2. Language Tutorial</td><td class="st200_navbar_up_title_cell">2. Language Tutorial</td><td class="st200_navbar_next_title_cell">2.2. Why?</td></tr><tr><td class="st200_navbar_prev_file_cell"><a href="p2.xhtml#st200_p2">Previous</a></td><td class="st200_navbar_up_file_cell"><a href="p2.xhtml#st200_p2">Up</a></td><td class="st200_navbar_next_file_cell"><a href="p2s2.xhtml#st200_p2s2">Next</a></td></tr></table><hr class="st200_hr"/></div><div class="st200_section_container"><div class="st200_section_title_number"><a id="st200_p2s1" href="#st200_p2s1">2.1</a></div><div class="st200_section_title">Prerequisites</div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s1pg1" href="#st200_p2s1pg1">1</a></div><div class="st200_paragraph">
        The <span class="st200_term package">parasol</span> compiler is implemented
        as a set of APIs with a simple command-line frontend. The frontend
        is packaged into a convenient 
        <a class="st200_link_external" href="http://mvn-repository.io7m.com//com/io7m/jparasol/io7m-jparasol-compiler-frontend/0.11.3/io7m-jparasol-compiler-frontend-0.11.3-jparasol-c.jar">executable jar</a>
        containing all of the compiler's dependencies. The jar file can
        be executed in the usual manner:
      </div></div><div class="st200_formal_item"><div class="st200_formal_item_title"><a id="st200_p2s1fo1" href="#st200_p2s1fo1">2.1.1. Compiler example</a></div><pre class="st200_verbatim">$ java -jar io7m-jparasol-compiler-frontend-0.11.3-jparasol-c.jar
parasol-c: [options] --compile-one output shader file0 [file1 ... fileN]
        or [options] --compile-batch output batch-list source-list
        or [options] --check file0 [file1 ... fileN]
        or [options] --show-glsl-versions
        or [options] --version

  Where: output           is a directory (unless --zip is specified) that will be populated with GLSL shaders
         shader           is the fully-qualified name of a shading program
         batch-list       is a file containing (output , ':' , shader) tuples, separated by newlines
         source-list      is a file containing a set of filenames, separated by newlines
         file[0 .. N]     is a series of filenames containing source code

     --check                            Parse and type-check all source files, but do not produce GLSL source
     --compact                          Enable compaction (eliminates duplicate source files)
     --compile-batch                    Produce multiple GLSL programs from a set of sources
     --compile-one                      Compile a specific shader program to GLSL source
  -h,--help                             Show this help message
     --log-properties &lt;properties&gt;      Configure logging based on the given property file
     --log-stack-traces                 Enable logging of exception stack traces
     --require-glsl &lt;version-set&gt;       Require GLSL source code for the given set of GLSL versions, failing if any of
                                        the versions cannot be satisfied
     --require-glsl-es &lt;version-set&gt;    Require GLSL ES source code for the given set of GLSL ES versions, failing if
                                        any of the versions cannot be satisfied
     --show-glsl-versions               Show the available GLSL versions
     --threads &lt;count&gt;                  Set the number of threads to use during code generation
     --version                          Display compiler version
     --zip                              Write shaders to a zip archive instead of a directory

   Where: version-set     := version-segment ( ',' version-segment )*
          version-segment := version-exact | version-range
          version-exact   := integer
          version-range   := ('(' | '[') integer? ',' integer? (')' | ']')

     Where '[' and ']' denote inclusive bounds, and '(' ')' denote exclusive bounds.

     Example: 130 selects version 130
     Example: [120, 150] selects versions 120 to 150
     Example: (120, 150] selects versions 130 to 150
     Example: 120,[140,330],440 selects versions 120, 140, 150, 330, and 440

  Version: 0.11.3</pre></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s1pg2" href="#st200_p2s1pg2">2</a></div><div class="st200_paragraph">
        The name of the <span class="st200_term file">io7m-jparasol-compiler-frontend-0.11.3-jparasol-c.jar</span> file
        is actually selected by Maven. For the sake of brevity, it is assumed that the user
        has renamed this file to <span class="st200_term file">jparasol-c.jar</span> for this
        tutorial.
      </div></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p2s1pg3" href="#st200_p2s1pg3">3</a></div><div class="st200_paragraph">
        The programmer is expected to be familiar enough with GLSL to
        dislike the language.
      </div></div></div><div class="st200_navbar st200_navbar_bottom"><hr class="st200_hr"/><table class="st200_navbar_table" summary="Navigation bar"><tr><td class="st200_navbar_prev_file_cell"><a href="p2.xhtml#st200_p2">Previous</a></td><td class="st200_navbar_up_file_cell"><a href="p2.xhtml#st200_p2">Up</a></td><td class="st200_navbar_next_file_cell"><a href="p2s2.xhtml#st200_p2s2">Next</a></td></tr><tr><td class="st200_navbar_prev_title_cell">2. Language Tutorial</td><td class="st200_navbar_up_title_cell">2. Language Tutorial</td><td class="st200_navbar_next_title_cell">2.2. Why?</td></tr></table></div></div></body></html>
