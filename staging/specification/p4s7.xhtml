<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><title>Parasol Language 0.11.3 Specification: 4.7. Function application</title><link rel="stylesheet" type="text/css" href="jstructural-2.0.0-layout.css"/><link rel="stylesheet" type="text/css" href="jstructural-2.0.0-colour.css"/><link rel="stylesheet" type="text/css" href="specification.css"/></head><body><div class="st200_body"><div class="brand">
  <div class="brand_left">
    <a href="http://io7m.com/">io7m</a>
  </div>
  <div class="brand_right">
    <a href="http://io7m.github.io/jparasol/">io7m-jparasol</a> 0.11.3
  </div>
</div><div class="st200_navbar st200_navbar_top"><table class="st200_navbar_table" summary="Navigation bar"><tr><td class="st200_navbar_prev_title_cell">4.6. Variable</td><td class="st200_navbar_up_title_cell">4. Expressions</td><td class="st200_navbar_next_title_cell">4.8. Conditional</td></tr><tr><td class="st200_navbar_prev_file_cell"><a href="p4s6.xhtml#st200_p4s6">Previous</a></td><td class="st200_navbar_up_file_cell"><a href="p4.xhtml#st200_p4">Up</a></td><td class="st200_navbar_next_file_cell"><a href="p4s8.xhtml#st200_p4s8">Next</a></td></tr></table><hr class="st200_hr"/></div><div class="st200_section_container"><div class="st200_section_title_number"><a id="st200_p4s7" href="#st200_p4s7">4.7</a></div><div class="st200_section_title">Function application</div><div class="st200_subsection_container"><div class="st200_subsection_title_number"><a id="st200_p4s7ss1" href="#st200_p4s7ss1">4.7.1</a></div><div class="st200_subsection_title">Description</div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p4s7ss1pg1" href="#st200_p4s7ss1pg1">1</a></div><div class="st200_paragraph">
          A <span class="st200_term term">function_application</span> expression applies
          a given function <span class="st200_term variable">f</span> to an n-tuple of
          argument expressions.
        </div></div></div><div class="st200_subsection_container"><div class="st200_subsection_title_number"><a id="st200_p4s7ss2" href="#st200_p4s7ss2">4.7.2</a></div><div class="st200_subsection_title">Type rules</div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p4s7ss2pg1" href="#st200_p4s7ss2pg1">1</a></div><div class="st200_paragraph">
          For <span class="st200_term term">function_application</span> expressions, if a function <span class="st200_term variable">f</span>
          takes an n-tuple of values of types <span class="st200_term type">(t₀ ✕ ... ✕ tₙ)</span> and
          returns a value of type <span class="st200_term type">u</span>, then applying
          <span class="st200_term variable">f</span> to an n-tuple of expressions of the
          corresponding types, results in a value of type <span class="st200_term type">u</span>:
        </div></div><div class="st200_formal_item specifications"><div class="st200_formal_item_title specifications"><a id="st200_p4s7ss2fo1" href="#st200_p4s7ss2fo1">4.7.2.1. Function application type rule (function_application)</a></div><img class="st200_image" alt="Function application type rule (function_application)" src="png/ty_function_application.png"/></div></div><div class="st200_subsection_container"><div class="st200_subsection_title_number"><a id="st200_p4s7ss3" href="#st200_p4s7ss3">4.7.3</a></div><div class="st200_subsection_title">Operational semantics</div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p4s7ss3pg1" href="#st200_p4s7ss3pg1">1</a></div><div class="st200_paragraph">
          For a <span class="st200_term term">function_application</span> expression
          <span class="st200_term expression">e</span>, expressions
          passed to the function are evaluated from left-to-right by rules
          <span class="st200_term constant">function_application_left_0</span> and
          <span class="st200_term constant">function_application_left_1</span>, and when all of
          the arguments have evaluated to values, the variables in the body of the
          function are substituted with the values of the arguments and the expression
          as a whole is evaluated, by rule
          <span class="st200_term constant">function_application_body</span>.
        </div></div><div class="st200_formal_item specifications"><div class="st200_formal_item_title specifications"><a id="st200_p4s7ss3fo1" href="#st200_p4s7ss3fo1">4.7.3.1. Function application semantics (function_application)</a></div><img class="st200_image" alt="Function application semantics (function_application)" src="png/op_function_application.png"/></div></div></div><div class="st200_navbar st200_navbar_bottom"><hr class="st200_hr"/><table class="st200_navbar_table" summary="Navigation bar"><tr><td class="st200_navbar_prev_file_cell"><a href="p4s6.xhtml#st200_p4s6">Previous</a></td><td class="st200_navbar_up_file_cell"><a href="p4.xhtml#st200_p4">Up</a></td><td class="st200_navbar_next_file_cell"><a href="p4s8.xhtml#st200_p4s8">Next</a></td></tr><tr><td class="st200_navbar_prev_title_cell">4.6. Variable</td><td class="st200_navbar_up_title_cell">4. Expressions</td><td class="st200_navbar_next_title_cell">4.8. Conditional</td></tr></table></div></div></body></html>
