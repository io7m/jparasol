<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><title>Parasol Language 0.11.3 Specification: 3.3. Types</title><link rel="stylesheet" type="text/css" href="jstructural-2.0.0-layout.css"/><link rel="stylesheet" type="text/css" href="jstructural-2.0.0-colour.css"/><link rel="stylesheet" type="text/css" href="specification.css"/></head><body><div class="st200_body"><div class="brand">
  <div class="brand_left">
    <a href="http://io7m.com/">io7m</a>
  </div>
  <div class="brand_right">
    <a href="http://io7m.github.io/jparasol/">io7m-jparasol</a> 0.11.3
  </div>
</div><div class="st200_navbar st200_navbar_top"><table class="st200_navbar_table" summary="Navigation bar"><tr><td class="st200_navbar_prev_title_cell">3.2. Terms</td><td class="st200_navbar_up_title_cell">3. Declarations</td><td class="st200_navbar_next_title_cell">3.4. Shaders</td></tr><tr><td class="st200_navbar_prev_file_cell"><a href="p3s2.xhtml#st200_p3s2">Previous</a></td><td class="st200_navbar_up_file_cell"><a href="p3.xhtml#st200_p3">Up</a></td><td class="st200_navbar_next_file_cell"><a href="p3s4.xhtml#st200_p3s4">Next</a></td></tr></table><hr class="st200_hr"/></div><div class="st200_section_container"><div class="st200_section_title_number"><a id="st200_p3s3" href="#st200_p3s3">3.3</a></div><div class="st200_section_title">Types</div><div class="st200_subsection_container"><div class="st200_subsection_title_number"><a id="st200_p3s3ss1" href="#st200_p3s3ss1">3.3.1</a></div><div class="st200_subsection_title">Declarations</div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p3s3ss1pg1" href="#st200_p3s3ss1pg1">1</a></div><div class="st200_paragraph">
          A <span class="st200_term term">type_declaration</span> declares
          a new
          <a class="st200_link" href="p3s3.xhtml#st200_p3s3ss4">record type</a>.
          This section documents the declarations themselves, while the
          <a class="st200_link" href="p5.xhtml#st200_p5">types</a>
          section documents the actual type system itself.
        </div></div></div><div class="st200_subsection_container"><div class="st200_subsection_title_number"><a id="st200_p3s3ss2" href="#st200_p3s3ss2">3.3.2</a></div><div class="st200_subsection_title">Names</div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p3s3ss2pg1" href="#st200_p3s3ss2pg1">1</a></div><div class="st200_paragraph">
          The names selected for types must be unique with respect to
          other types within the <a class="st200_link" href="p3s8.xhtml#st200_p3s8">module</a>
          in which they are defined. That is, there cannot be two types with the same name
          in the same module. Types do not share a name space with
          <a class="st200_link" href="p3s2.xhtml#st200_p3s2">terms</a>
          or <a class="st200_link" href="p3s4.xhtml#st200_p3s4">shaders</a>.
        </div></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p3s3ss2pg2" href="#st200_p3s3ss2pg2">2</a></div><div class="st200_paragraph">
          The following restrictions apply when naming types:
        </div></div><div class="st200_formal_item specifications"><div class="st200_formal_item_title specifications"><a id="st200_p3s3ss2fo1" href="#st200_p3s3ss2fo1">3.3.2.1. Name restrictions</a></div><ul class="st200_list_unordered"><li class="st200_list_item">
              Type names must begin with a <span class="st200_term term">lowercase</span>
              letter. This is directly implied by the
              <a class="st200_link" href="p3s3.xhtml#st200_p3s3ss6">grammar</a>.
            </li><li class="st200_list_item">
              Names cannot contain two adjacent underscores (<span class="st200_term constant">U+005F</span>).
            </li><li class="st200_list_item">
              Names cannot end with underscores (<span class="st200_term constant">U+005F</span>).
            </li><li class="st200_list_item">
              Names cannot start with the character sequence "<span class="st200_term constant">gl_</span>"
              (<span class="st200_term constant">U+0067</span>,
               <span class="st200_term constant">U+006C</span>,
               <span class="st200_term constant">U+005F</span>).
            </li><li class="st200_list_item">
              Names cannot match any of the keywords or reserved words defined in
              any version of the OpenGL shading language. See the
              <a class="st200_link" href="p8s4.xhtml#st200_p8s4">GLSL identifiers</a>
              section for the complete list.
            </li></ul></div></div><div class="st200_subsection_container"><div class="st200_subsection_title_number"><a id="st200_p3s3ss3" href="#st200_p3s3ss3">3.3.3</a></div><div class="st200_subsection_title">Recursion</div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p3s3ss3pg1" href="#st200_p3s3ss3pg1">1</a></div><div class="st200_paragraph">
          No <span class="st200_term term">type_declaration</span> can be <span class="st200_term term">recursive</span>
          with respect to itself or any other <span class="st200_term term">type_declaration</span>
          in the <a class="st200_link" href="p3s8.xhtml#st200_p3s8">module</a>
          in which it appears.
        </div></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p3s3ss3pg2" href="#st200_p3s3ss3pg2">2</a></div><div class="st200_paragraph">
          A type <span class="st200_term variable">d₀</span> is said to
          <span class="st200_term term">refer statically</span> to a
          type <span class="st200_term variable">d₁</span> if
          <span class="st200_term variable">d₀</span> appears anywhere in the
          definition of <span class="st200_term variable">d₁</span>.
        </div></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p3s3ss3pg3" href="#st200_p3s3ss3pg3">3</a></div><div class="st200_paragraph">
          A <span class="st200_term term">type_declaration</span> <span class="st200_term variable">d</span>
          is (mutually) <span class="st200_term term">recursive</span> iff:
        </div></div><div class="st200_formal_item specifications"><div class="st200_formal_item_title specifications"><a id="st200_p3s3ss3fo1" href="#st200_p3s3ss3fo1">3.3.3.1. Recursion conditions</a></div><ul class="st200_list_unordered"><li class="st200_list_item">
              <span class="st200_term variable">d</span> refers statically to itself.
            </li><li class="st200_list_item">
              There is a sequence of types <span class="st200_term expression">t₀, t₁, ..., tₙ</span>
              such that <span class="st200_term variable">d</span> refers statically to
              <span class="st200_term variable">t₀</span>, and
              for all <span class="st200_term variable">m</span> where <span class="st200_term expression">0 &lt;= m &lt; n</span>,
              <span class="st200_term variable">tₘ</span> refers statically
              <span class="st200_term expression">t₍ₘ₊₁₎</span>, and
              <span class="st200_term variable">tₙ</span> refers statically to
              <span class="st200_term variable">d</span>.
            </li></ul></div></div><div class="st200_subsection_container"><div class="st200_subsection_title_number"><a id="st200_p3s3ss4" href="#st200_p3s3ss4">3.3.4</a></div><div class="st200_subsection_title">Records</div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p3s3ss4pg1" href="#st200_p3s3ss4pg1">1</a></div><div class="st200_paragraph">
          A <span class="st200_term term">type_declaration</span> binds a
          <span class="st200_term term">record_type_expression</span> to a name.
          A <span class="st200_term term">record_type_expression</span> declares
          a set of named <span class="st200_term term">fields</span> and types.
        </div></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p3s3ss4pg2" href="#st200_p3s3ss4pg2">2</a></div><div class="st200_paragraph">
          A <span class="st200_term term">record_type_expression</span> cannot
          contain two <span class="st200_term term">fields</span> with the
          same name, but two distinct
          <span class="st200_term term">record_type_expressions</span> can have
          <span class="st200_term term">fields</span> with the same names. To
          clarify, these are valid <span class="st200_term term">type_declarations</span>:
        </div></div><div class="st200_formal_item"><div class="st200_formal_item_title"><a id="st200_p3s3ss4fo1" href="#st200_p3s3ss4fo1">3.3.4.1. Valid type declarations</a></div><pre class="st200_verbatim">type t is record
  x : integer,
  y : integer
end;

type u is record
  x : integer,
  y : integer
end;</pre></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p3s3ss4pg3" href="#st200_p3s3ss4pg3">3</a></div><div class="st200_paragraph">
          However, this is not:
        </div></div><div class="st200_formal_item"><div class="st200_formal_item_title"><a id="st200_p3s3ss4fo2" href="#st200_p3s3ss4fo2">3.3.4.2. Invalid type declarations (duplicate field)</a></div><pre class="st200_verbatim">type t is record
  x : integer,
  x : integer
end;</pre></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p3s3ss4pg4" href="#st200_p3s3ss4pg4">4</a></div><div class="st200_paragraph">
          As described in the <a class="st200_link" href="p5.xhtml#st200_p5">types</a>
          section, types have <span class="st200_term term">by-name equivalence</span> and
          therefore two identical <span class="st200_term term">record_type_expressions</span>
          bound to different names are not type-compatible.
        </div></div></div><div class="st200_subsection_container"><div class="st200_subsection_title_number"><a id="st200_p3s3ss5" href="#st200_p3s3ss5">3.3.5</a></div><div class="st200_subsection_title">Type rules</div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p3s3ss5pg1" href="#st200_p3s3ss5pg1">1</a></div><div class="st200_paragraph">
          A <span class="st200_term term">type_declaration</span> introduces a new record
          type into the typing environment. See the rules for
          <a class="st200_link" href="p5s9.xhtml#st200_p5s9">record types</a>
          for the effects that this has on typing rules.
        </div></div></div><div class="st200_subsection_container"><div class="st200_subsection_title_number"><a id="st200_p3s3ss6" href="#st200_p3s3ss6">3.3.6</a></div><div class="st200_subsection_title">Syntax</div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p3s3ss6pg1" href="#st200_p3s3ss6pg1">1</a></div><div class="st200_paragraph">
          The precise syntax of type declarations is given by the following
          EBNF:
        </div></div><div class="st200_formal_item specifications"><div class="st200_formal_item_title specifications"><a id="st200_p3s3ss6fo1" href="#st200_p3s3ss6fo1">3.3.6.1. Type declaration syntax</a></div><pre class="st200_verbatim">record_type_field =
  name_lower , ":" , type_path ;

record_type_expression =
  "record" , record_type_field , { "," , record_type_field } , "end" ;

type_declaration =
  "type" , name_lower , "is" , type_expression ;

type_expression =
  record_type_expression
  ;
        </pre></div></div><div class="st200_subsection_container"><div class="st200_subsection_title_number"><a id="st200_p3s3ss7" href="#st200_p3s3ss7">3.3.7</a></div><div class="st200_subsection_title">Examples</div><div class="st200_formal_item"><div class="st200_formal_item_title"><a id="st200_p3s3ss7fo1" href="#st200_p3s3ss7fo1">3.3.7.1. Examples</a></div><pre class="st200_verbatim">
type t is record
  x : integer,
  y : integer,
  z : integer
end;

type u is record
  v0 : t,
  v1 : t,
  v2 : t
end;</pre></div></div></div><div class="st200_navbar st200_navbar_bottom"><hr class="st200_hr"/><table class="st200_navbar_table" summary="Navigation bar"><tr><td class="st200_navbar_prev_file_cell"><a href="p3s2.xhtml#st200_p3s2">Previous</a></td><td class="st200_navbar_up_file_cell"><a href="p3.xhtml#st200_p3">Up</a></td><td class="st200_navbar_next_file_cell"><a href="p3s4.xhtml#st200_p3s4">Next</a></td></tr><tr><td class="st200_navbar_prev_title_cell">3.2. Terms</td><td class="st200_navbar_up_title_cell">3. Declarations</td><td class="st200_navbar_next_title_cell">3.4. Shaders</td></tr></table></div></div></body></html>
