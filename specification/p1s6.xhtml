<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><title>Parasol Language 0.11.3 Specification: 1.6. Types</title><link rel="stylesheet" type="text/css" href="jstructural-2.0.0-layout.css"/><link rel="stylesheet" type="text/css" href="jstructural-2.0.0-colour.css"/><link rel="stylesheet" type="text/css" href="specification.css"/></head><body><div class="st200_body"><div class="brand">
  <div class="brand_left">
    <a href="http://io7m.com/">io7m</a>
  </div>
  <div class="brand_right">
    <a href="http://io7m.github.io/jparasol/">io7m-jparasol</a> 0.11.3
  </div>
</div><div class="st200_navbar st200_navbar_top"><table class="st200_navbar_table" summary="Navigation bar"><tr><td class="st200_navbar_prev_title_cell">1.5. Tuples</td><td class="st200_navbar_up_title_cell">1. Notational Conventions</td><td class="st200_navbar_next_title_cell">1.7. Type rules</td></tr><tr><td class="st200_navbar_prev_file_cell"><a href="p1s5.xhtml#st200_p1s5">Previous</a></td><td class="st200_navbar_up_file_cell"><a href="p1.xhtml#st200_p1">Up</a></td><td class="st200_navbar_next_file_cell"><a href="p1s7.xhtml#st200_p1s7">Next</a></td></tr></table><hr class="st200_hr"/></div><div class="st200_section_container"><div class="st200_section_title_number"><a id="st200_p1s6" href="#st200_p1s6">1.6</a></div><div class="st200_section_title">Types</div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p1s6pg1" href="#st200_p1s6pg1">1</a></div><div class="st200_paragraph">
        The specification (and the <span class="st200_term package">parasol</span> language itself)
        uses notation and concepts taken from type theory
        <span class="st200_footnote_reference"><a id="st200_fn_2_ref" href="#st200_fn_2">[2]</a></span>.
        A summary of the notation used is as follows:
      </div></div><div class="st200_formal_item notations"><div class="st200_formal_item_title notations"><a id="st200_p1s6fo1" href="#st200_p1s6fo1">1.6.1. Type notation</a></div><table class="st200_table" summary="Type notation"><thead class="st200_table_head"><tr><th class="st200_table_column_name">Notation</th><th class="st200_table_column_name">Description</th><th class="st200_table_column_name">Example</th></tr></thead><tbody class="st200_table_body"><tr class="st200_table_row"><td class="st200_table_cell"><span class="st200_term expression">x : A</span></td><td class="st200_table_cell">The term <span class="st200_term variable">x</span> is of type <span class="st200_term variable">A</span></td><td class="st200_table_cell"><span class="st200_term expression">23 : ‚Ñï</span></td></tr><tr class="st200_table_row"><td class="st200_table_cell"><span class="st200_term expression">A ‚Üí B</span></td><td class="st200_table_cell">The type of functions from values of type <span class="st200_term variable">A</span> to values of type <span class="st200_term variable">B</span></td><td class="st200_table_cell"><span class="st200_term expression">even : ‚Ñï ‚Üí ùîπ</span></td></tr><tr class="st200_table_row"><td class="st200_table_cell"><span class="st200_term expression">A √ó B</span></td><td class="st200_table_cell">The type of products of <span class="st200_term variable">A</span> and <span class="st200_term variable">B</span></td><td class="st200_table_cell"><span class="st200_term expression">(23, true) : ‚Ñï √ó ùîπ</span></td></tr></tbody></table></div><div class="st200_paragraph_container"><div class="st200_paragraph_number"><a id="st200_p1s6pg2" href="#st200_p1s6pg2">2</a></div><div class="st200_paragraph">
        Product types are typically used to encode the notion of
        <span class="st200_term term">n-ary functions</span>,
        where <span class="st200_term expression">(A √ó B √ó C) ‚Üí D</span>
        is the type of functions that take three arguments of types
        <span class="st200_term expression">A</span>, <span class="st200_term expression">B</span>,
        and <span class="st200_term expression">C</span>, respectively, and return
        values of type <span class="st200_term expression">D</span>.
      </div></div></div><div class="st200_footnotes"><hr/><div class="st200_footnote_container"><div class="st200_footnote_number">[<a id="st200_fn_2" href="#st200_fn_2_ref">2</a>]</div><div class="st200_footnote_body">
          <a class="st200_link_external" href="http://en.wikipedia.org/wiki/Type_theory">https://en.wikipedia.org/wiki/Type_theory</a>
        </div></div></div><div class="st200_navbar st200_navbar_bottom"><hr class="st200_hr"/><table class="st200_navbar_table" summary="Navigation bar"><tr><td class="st200_navbar_prev_file_cell"><a href="p1s5.xhtml#st200_p1s5">Previous</a></td><td class="st200_navbar_up_file_cell"><a href="p1.xhtml#st200_p1">Up</a></td><td class="st200_navbar_next_file_cell"><a href="p1s7.xhtml#st200_p1s7">Next</a></td></tr><tr><td class="st200_navbar_prev_title_cell">1.5. Tuples</td><td class="st200_navbar_up_title_cell">1. Notational Conventions</td><td class="st200_navbar_next_title_cell">1.7. Type rules</td></tr></table></div></div></body></html>
